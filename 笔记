#define _CRT_SECURE_NO_WARNINGS 1
#include<stdio.h>
#include<string.h>
#include<assert.h>
#include<error.h>
#include<ctype.h>
//strstr 查找字符串
//char* my_strstr(const char* p1; const char* p2)
//{
//	assert(p1 != NULL);
//	assert(p2 != NULL);
//	char* s1 = NULL;
//	char* s2 = NULL;
//	char* cur = (char*)p1;
//	if (*p2 == '\0')
//	{
//		return (char*)p1;
//	}
//	while (*cur)
//	{
//		s1 = cur;
//		s2 = (char*)p2;
//		while (*s1 && *s2 && (*s1 == *s2))
//		{
//			s1++;
//			s2++;
//		}
//		if (*s2 == '\0')
//		{
//			return cur;
//		}
//		if (*s1 == '\0')
//		{
//			return 0;
//		}
//		cur++;
//	}
//	return NULL;
//}
//int main()
//{
//	char* p1 = "abcdef";
//	char* p2 = "abc";
//	char* ret = my_strstr(p1, p2);
//	if (ret == NULL)
//	{
//		printf("子串不存在\n");
//	}
//	else
//	{
//		printf("&s\n", p2);
//	}
//	return 0;
//}
//strtok
int main()

{
	//点分十进制的表示方式
	char arr[] = "zpw@birie.com";
	char* p = ".";
	char buf[1024] = { 0 };
	strcpy(buf, arr);//切割buf中的字符串；
	char* ret = NULL;
	for (ret = strtok(arr, p); ret!= NULL; ret = strtok(NULL, p))
	{
		printf("%s\n", ret);
	}
	//strtok(arr, p);
	return 0;
}
int main()

{
	//错误码 错误信息
	//0- No error
	//errro是一个全局 的错误的变量
	//当C语言的库函数在执行的过程中，发生了错误救赎吧对应的错误赋值到errno中
	FILE* pf = fopen("Test.c", r);
	if (pf = NULL)
	{
		printf("%s\n", strerror(errno));
	}
	else
	{
		printf("open succeesful\n");
	}
	char* str = strerror(2);
	printf("%s\n", str);
	return 0;
}
int main()
{
	char ch = 'w';
	int ret = islower(ch);
	int ret = isdigit(ch);
	char ch = tolower('q');//字符转换
	putchar(ch);
	printf("%d\n", ret);
	return 0;
}
